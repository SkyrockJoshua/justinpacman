enum ActionKind {
    Walking,
    Idle,
    Jumping
}
namespace SpriteKind {
    export const EatEnemy = SpriteKind.create()
}
controller.up.onEvent(ControllerButtonEvent.Pressed, function () {
    walkingplayer_LIFT = animation.createAnimation(ActionKind.Walking, 100)
    animation.attachAnimation(mySprite, walkingplayer_LIFT)
    walkingplayer_LIFT.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . 3 3 . . . . 3 3 . . . . 
        . . . 3 3 3 . . . . 3 3 3 . . . 
        . . 3 3 3 3 . . . . 3 3 3 3 . . 
        . . 3 f 3 3 3 . . 3 3 3 3 3 . . 
        . 3 3 3 3 3 3 . 3 3 3 3 3 3 3 . 
        . 3 3 3 3 3 3 3 3 3 3 3 3 3 3 . 
        . 3 3 3 3 3 3 3 3 3 3 3 3 3 3 . 
        . 3 3 3 3 3 3 3 3 3 3 3 3 3 3 . 
        . . 3 3 3 3 3 3 3 3 3 3 3 3 . . 
        . . 3 3 3 3 3 3 3 3 3 3 3 3 . . 
        . . . 3 3 3 3 3 3 3 3 3 3 . . . 
        . . . . 3 3 3 3 3 3 3 3 . . . . 
        . . . . . . 3 3 3 3 . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    walkingplayer_LIFT.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . 3 3 f 3 . . . . . . 
        . . . . 3 3 3 3 f 3 3 3 . . . . 
        . . . 3 3 3 3 3 f 3 3 3 3 . . . 
        . . 3 3 3 f 3 3 f 3 3 3 3 3 . . 
        . . 3 3 3 3 3 3 f 3 3 3 3 3 . . 
        . 3 3 3 3 3 3 3 f 3 3 3 3 3 3 . 
        . 3 3 3 3 3 3 3 3 3 3 3 3 3 3 . 
        . 3 3 3 3 3 3 3 3 3 3 3 3 3 3 . 
        . . 3 3 3 3 3 3 3 3 3 3 3 3 3 . 
        . . 3 3 3 3 3 3 3 3 3 3 3 3 . . 
        . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
        . . . 3 3 3 3 3 3 3 3 3 3 . . . 
        . . . . 3 3 3 3 3 3 3 3 . . . . 
        . . . . . . 3 3 3 3 . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    animation.setAction(mySprite, ActionKind.Walking)
})
controller.left.onEvent(ControllerButtonEvent.Pressed, function () {
    walkingplayer_LIFT = animation.createAnimation(ActionKind.Walking, 100)
    animation.attachAnimation(mySprite, walkingplayer_LIFT)
    walkingplayer_LIFT.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . 5 5 5 5 . . . . . . 
        . . . . 5 5 5 5 5 5 5 5 . . . . 
        . . . 5 5 5 5 5 5 5 5 1 5 . . . 
        . . 5 5 5 5 5 5 5 5 1 1 1 5 . . 
        . . 5 5 f 5 5 5 5 5 5 1 5 5 . . 
        . 5 5 5 5 5 5 5 5 5 5 5 5 5 5 . 
        . 5 5 5 5 5 5 5 5 5 5 5 5 5 5 . 
        . f f f f f 5 5 5 5 5 5 5 5 5 . 
        . 5 5 5 5 5 5 5 5 5 5 5 5 5 5 . 
        . . 5 5 5 5 5 5 5 5 5 5 5 5 . . 
        . . 5 5 5 5 5 5 5 5 5 5 5 5 . . 
        . . . 5 5 5 5 5 5 5 5 5 5 . . . 
        . . . . 5 5 5 5 5 5 5 5 . . . . 
        . . . . . . 5 5 5 5 . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    walkingplayer_LIFT.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . 5 5 5 5 . . . . . . 
        . . . . 5 5 5 5 5 5 5 5 . . . . 
        . . . 5 5 5 5 5 5 5 5 1 5 . . . 
        . . 5 5 5 5 5 5 5 5 1 1 1 5 . . 
        . . 5 5 f 5 5 5 5 5 5 1 5 5 . . 
        . 5 5 5 5 5 5 5 5 5 5 5 5 5 5 . 
        . 5 5 5 5 5 5 5 5 5 5 5 5 5 5 . 
        . . . . . . 5 5 5 5 5 5 5 5 5 . 
        . . . . . 5 5 5 5 5 5 5 5 5 5 . 
        . . . . 5 5 5 5 5 5 5 5 5 5 . . 
        . . 5 5 5 5 5 5 5 5 5 5 5 5 . . 
        . . . 5 5 5 5 5 5 5 5 5 5 . . . 
        . . . . 5 5 5 5 5 5 5 5 . . . . 
        . . . . . . 5 5 5 5 . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    animation.setAction(mySprite, ActionKind.Walking)
})
function createEnemy () {
    mySprite2 = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . 1 1 1 1 1 1 1 1 1 1 . . . 
        . . . 1 f f . 1 1 . f f 1 . . . 
        . . . 1 f f 1 1 1 1 f f 1 1 . . 
        . . . 1 1 1 1 1 . 1 1 1 1 . . . 
        . . 1 2 2 2 2 2 2 2 2 2 2 2 1 . 
        . . 1 1 2 1 2 1 2 1 2 1 2 1 1 . 
        . . 1 2 2 2 2 2 2 2 2 2 2 2 1 . 
        . . . . 1 1 . 1 1 . 1 1 . 1 . . 
        . . . . 1 1 . 1 1 . 1 1 . 1 . . 
        . . . . 1 . . 1 1 . 1 1 . 1 . . 
        . . . . . . . . . . 1 . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.Enemy)
    tiles.placeOnRandomTile(mySprite2, myTiles.tile3)
    mySprite2.follow(mySprite, 60)
}
function createPowerUp () {
    power_up = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . 2 . . . . . . . . 
        . . . . . . 2 2 2 . . . . . . . 
        . . . . . 2 2 2 f 2 . . . . . . 
        . . . . . 2 2 f 2 2 . . . . . . 
        . . . . 2 f 2 2 2 2 2 . . . . . 
        . . . . 2 2 2 2 2 f 2 . . . . . 
        . . . 7 2 2 f 2 2 2 7 . . . . . 
        . . . . 7 2 2 2 2 7 . . . . . . 
        . . . . . 7 7 7 7 . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.EatEnemy)
    tiles.placeOnRandomTile(power_up, myTiles.tile3)
}
controller.right.onEvent(ControllerButtonEvent.Pressed, function () {
    walkingRight = animation.createAnimation(ActionKind.Walking, 100)
    animation.attachAnimation(mySprite, walkingRight)
    walkingRight.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . 8 8 8 8 . . . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . 8 8 8 8 8 8 8 8 8 8 . . . 
        . . 8 8 8 1 8 8 8 8 8 8 8 8 . . 
        . . 8 8 1 1 1 8 8 8 f 8 8 8 . . 
        . 8 8 8 8 1 8 8 8 8 8 8 8 8 8 . 
        . 8 8 8 8 8 8 8 8 8 8 8 8 8 8 . 
        . 8 8 8 8 8 8 8 8 8 8 8 8 8 8 . 
        . 8 8 8 8 8 8 8 8 f f f f f f . 
        . . 8 8 8 8 8 8 8 8 8 8 8 8 . . 
        . . 8 8 8 8 8 8 8 8 8 8 8 8 . . 
        . . . 8 8 8 8 8 8 8 8 8 8 . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . . . 8 8 8 8 . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    walkingRight.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . 8 8 8 8 . . . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . 8 8 1 8 8 8 8 8 1 8 . . . 
        . . 8 8 1 1 1 8 8 8 1 f 1 8 . . 
        . . 8 8 8 1 8 8 8 8 8 1 8 8 . . 
        . 8 8 8 8 8 8 8 8 8 8 8 8 8 8 . 
        . 8 8 8 8 8 8 8 8 8 8 8 8 8 8 . 
        . 8 8 8 8 8 8 8 8 . . . . . . . 
        . 8 8 8 8 8 8 8 . . . . . . . . 
        . . 8 8 8 8 8 8 . . . . . . . . 
        . . 8 8 8 8 8 8 8 8 . . . . . . 
        . . . 8 8 8 8 8 8 8 8 8 8 . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . . . 8 8 8 8 . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    animation.setAction(mySprite, ActionKind.Walking)
})
function createFood () {
    hamberger = sprites.create(img`
        2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
        2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
        2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
        4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
        4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
        4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
        5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
        5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
        5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
        9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
        9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
        9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
        8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
        8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
        `, SpriteKind.Food)
    tiles.placeOnRandomTile(hamberger, myTiles.tile3)
}
controller.down.onEvent(ControllerButtonEvent.Pressed, function () {
    walkingplayer_LIFT = animation.createAnimation(ActionKind.Walking, 100)
    animation.attachAnimation(mySprite, walkingplayer_LIFT)
    walkingplayer_LIFT.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . 2 2 2 2 . . . . . . 
        . . . . 2 2 2 2 2 2 2 2 . . . . 
        . . . 2 2 2 2 2 2 2 2 2 2 . . . 
        . . 2 2 2 2 2 2 2 2 2 2 2 2 . . 
        . . 2 2 2 2 2 2 2 2 2 2 2 2 . . 
        . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
        . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
        . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
        . . 2 2 2 2 2 2 f 2 2 2 2 2 2 . 
        . . 2 2 2 f 2 2 f 2 2 2 2 2 . . 
        . . . 2 2 2 2 2 f 2 2 2 2 2 . . 
        . . . 2 2 2 2 2 f 2 2 2 2 . . . 
        . . . . 2 2 2 2 f 2 2 2 . . . . 
        . . . . . . 2 2 f 2 . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    walkingplayer_LIFT.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . 2 2 2 2 . . . . . . 
        . . . . 2 2 2 2 2 2 2 2 . . . . 
        . . . 2 2 2 2 2 2 2 2 2 2 . . . 
        . . 2 2 2 2 2 2 2 2 2 2 2 2 . . 
        . . 2 2 2 2 2 2 2 2 2 2 2 2 . . 
        . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
        . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
        . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
        . 2 2 2 2 2 2 2 . 2 2 2 2 2 2 . 
        . . 2 2 2 2 2 . . 2 2 2 2 2 . . 
        . . 2 2 f 2 2 . . 2 2 2 2 2 . . 
        . . . 2 2 2 2 . . 2 2 2 2 . . . 
        . . . . 2 2 . . . . 2 2 . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    animation.setAction(mySprite, ActionKind.Walking)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {
    otherSprite.destroy()
    info.changeScoreBy(1)
    info.startCountdown(60)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.EatEnemy, function (sprite, otherSprite) {
    canEatEnemy = true
    otherSprite.destroy()
    pause(5000)
    canEatEnemy = false
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {
    if (canEatEnemy == true) {
        otherSprite.destroy()
        info.changeScoreBy(10)
    } else {
        info.changeLifeBy(-1)
        otherSprite.destroy()
    }
})
let canEatEnemy = false
let hamberger: Sprite = null
let walkingRight: animation.Animation = null
let power_up: Sprite = null
let mySprite2: Sprite = null
let walkingplayer_LIFT: animation.Animation = null
let mySprite: Sprite = null
mySprite = sprites.create(img`
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
    2 2 1 5 1 5 1 2 2 1 5 1 5 1 2 2 
    2 2 5 1 5 1 5 2 2 5 1 5 1 5 2 2 
    2 2 1 5 1 5 1 2 2 1 5 1 5 1 2 2 
    2 2 5 1 5 1 5 2 2 5 1 5 1 5 2 2 
    2 2 1 5 1 5 1 2 2 1 5 1 5 1 2 2 
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
    2 2 2 5 2 2 2 2 2 2 2 2 5 2 2 2 
    2 2 2 2 1 2 2 2 2 2 2 5 2 2 2 2 
    2 2 2 2 5 1 2 2 2 2 5 1 2 2 2 2 
    2 2 2 2 2 2 5 1 5 1 2 2 2 2 2 2 
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
    `, SpriteKind.Player)
controller.moveSprite(mySprite, 100, 100)
tiles.setTilemap(tiles.createTilemap(hex``, img`
    . . . . . . . . . . . . . . . 2 2 2 2 2 2 . . . . . . . . . . . 
    2 . . . . 2 . . . . . . . . . 2 . . . . . . 2 2 2 . . . . . . . 
    2 . . . 2 2 2 . . . . . . . . 2 . . . . . . . . 2 2 . . . . . . 
    2 . . . 2 . . . . . . . . . . 2 . . . . . . . . . 2 . . . . . . 
    2 . . . 2 . . . 2 . . . . . . . 2 . . . . . . . . 2 . . . . . . 
    2 . . . 2 . . . 2 . . . . . . . 2 . . . 2 2 2 2 . 2 . . 2 . . . 
    2 . . . . . . . 2 . . . . . . . 2 . . . . . . . 2 2 . . 2 . . . 
    2 . . . . . . 2 . . . . . . . . 2 . . . . . . . . . . . 2 . . . 
    2 . . . . . . 2 . . . . . . . . 2 . . . . . . . . . . . . 2 . . 
    2 . . . . . 2 2 . . 2 . . . . . 2 . . . . . . . . . 2 . . 2 . . 
    2 . . . . . . . . 2 2 . . . . . . . . . . . 2 . . . 2 . . 2 . . 
    2 . . . . . . . . . . . . . . . . . . . . . 2 . . . 2 . . 2 . . 
    2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 2 . . . . 2 . 2 . . 
    . . . . . . . . . . . . . . . 2 . . . . . . 2 . . . . 2 . 2 . . 
    . . . . . . . . . . . . . . . 2 . . . . . . 2 . . . . 2 . 2 . . 
    . . . . . . . . . . . . . . . 2 . . . . . . 2 . . . . 2 . 2 . . 
    . . . . . 2 2 . . . . . . . . 2 . . . . . . 2 . . . . 2 . 2 . . 
    . . . . . . 2 . . . . . . . . 2 . . . 2 . . 2 . . . . 2 . 2 . . 
    . . . . . . 2 . . . . . . . . 2 . . . 2 . . 2 . . . . 2 . . . . 
    . . . . . . 2 2 . . . . . . . 2 . . . 2 . . 2 . . . . . . . . . 
    . . . . . . 2 2 . 2 2 2 2 2 2 2 . . . 2 . . . 2 . . . . . . . . 
    . . . . . . 2 2 . . . . . . . . . . . 2 . . . 2 . . . . . . . . 
    . . . . . . 2 2 . . . . . . . . . . . . 2 . . 2 . . . . . . . . 
    . . . . . . 2 2 . . . . . . . . . . . . 2 . . 2 . . . . . . . . 
    . . . . . 2 . . . 2 2 2 2 2 2 . . . . . 2 . . 2 . . . . . . . . 
    . . . . . 2 . . 2 . . . . . . . . . . . 2 . . 2 . . . . . . . . 
    . . . . . . . . . . . . . . . . . . . . 2 . . 2 . . . . . . . . 
    . . . . . . . . . . . . . . . . . . . . 2 2 . . . . . . . . . . 
    . . . . 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
    `, [myTiles.transparency16,myTiles.tile5,myTiles.tile3], TileScale.Sixteen))
scene.cameraFollowSprite(mySprite)
tiles.placeOnRandomTile(mySprite, myTiles.tile3)
info.startCountdown(60)
for (let index = 0; index < 20; index++) {
    createFood()
}
for (let index = 0; index < 10; index++) {
    createPowerUp()
}
for (let index = 0; index < 5; index++) {
    createEnemy()
}
info.setLife(3)
game.onUpdateInterval(500, function () {
    if (info.score() >= 50) {
        game.over(true)
    }
})
